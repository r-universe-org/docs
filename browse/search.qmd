---
title: "Search for packages"
---

You can search for packages via <https://r-universe.dev/search/> using keywords or author names.  
You can use the [API](#api-global-search) to do the same search.

To search for an exact phrase like "weather data", that can include spaces or other characters, use **double quotes** instead of single quotes.  


![Search landing page](../img/search.png){group="search" fig-alt="Search landing page, with a search box"}

The search bar includes a drop-down button for accessing advanced search fields:

- Package
- Owner
- Author
- Contributor
- Topic
- Needs
- Exports
- Data


![Search landing page, advanced fields](../img/search-advanced.png){group="search" fig-alt="Search landing page, displaying advanced search fields like author and keywords"}

![Search results for '"missing-data"'](../img/search-missingData.png){group="search" fig-alt="Search results for 'missing-data'"}

![Search results for 'author:jeroen json'](../img/search-authorJeroenJson.png){group="search" fig-alt="Search results for 'author:jeroen json'"}

![Search results for 'exports:toJSON'](../img/search-exportsToJson.png){group="search" fig-alt="Search results for 'exports:tojson'"}

To use a logical OR, add a space between search terms. 

![Search results for 'jeroen curl'](../img/search-jeroen-or-curl.png){group="search" fig-alt="Search results for 'jeroen curl'"}

To use a logical AND, use double quotes for each search term: 

![Search results for '"jeroen" "curl"'](../img/search-jeroenCurl.png){group="search" fig-alt="Search results for '"jeroen" "curl"'"}

To use a logical NOT: prefix search terms with -: 

![Search results for 'jeroen -curl -json'](../img/search-jeroenCurlJson.png){group="search" fig-alt="Search results for 'jeroen -curl -json'"}


## How is the package-rank score calculated? {#rank}

The rank of a package in search results is based on its [match](https://github.com/r-universe-org/cranlike-server/blob/master/src/db.js#L63-L93) with the search queries, and on its popularity/quality.

The exact algorithm for calculating popularity/quality is a work-in-progress and will change. 
At the time of writing it includes:

 - Number of dependents (that is to say, recursive reverse dependencies);
 - Number of stars on Github;
 - Number of unique contributors;
 - Commit activity over the last year;
 - Downloads per month from CRAN or Bioconductor mirrors;
 - Number of files on GitHub that mention 'library(pkgname)'.

You can browse [scores and metrics for all packages](https://r-universe.dev/packages).

We plan to keep updating the algorithm as R-universe matures and better data becomes available.

As a package maintainer, you can [optimize your package's metadata](#keywords) and work on [improving its rank](#better-rank).

## Why is a package sometimes listed twice?

If a source package fails to build (which means something is very wrong) then you see a red “build failure” message.
If there was a previous successful build, it is kept there as well for users to install.
You can explore [scores and metrics for all packages](https://r-universe.dev/packages).  
The algorithm will evolve as R-universe matures and better data becomes available.

## Which packages get included in search? {#deduplication}

In R-universe, a given R package can appear in multiple registries.
To avoid duplicates, search results only display packages from the upstream GitHub owner's universe, excluding third-party copies.

Specifically, search results include:

- Packages where the GitHub owner matches the universe name (e.g., packages under `https://jeroen.r-universe.dev` from `https://github.com/jeroen/`). This includes all CRAN packages.
- Packages where the universe name differs from the GitHub owner, but the DESCRIPTION file includes the full `user.r-universe.dev` URL in the `URL` field (e.g., `https://jeroen.r-universe.dev` or `https://jeroen.r-universe.dev/mypkg`).


## Why is a package sometimes listed twice?

If a source package fails to build (indicating a critical issue), a red "build failure" message is displayed.  
If a previous build succeeded, it remains available for users to install. 
